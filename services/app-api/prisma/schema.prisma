// MoMo Merchant Companion App - Database Schema
// Using PostgreSQL with UUID v7 for optimal indexing and performance

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Custom UUID v7 generation function
// This will be created as a PostgreSQL function
model UuidV7 {
  @@map("_uuid_v7")
}

// ============================================================================
// CORE ENTITIES
// ============================================================================

// User accounts for merchants and agents
model User {
  id                String   @id @default(uuid7()) @db.Uuid
  email             String   @unique @db.VarChar(255)
  phone             String?  @unique @db.VarChar(20)
  passwordHash      String   @db.VarChar(255)
  firstName         String   @db.VarChar(100)
  lastName          String   @db.VarChar(100)
  isActive          Boolean  @default(true)
  isEmailVerified   Boolean  @default(false)
  isPhoneVerified   Boolean  @default(false)
  lastLoginAt       DateTime?
  createdAt         DateTime @default(now()) @db.Timestamp(6)
  updatedAt         DateTime @updatedAt @db.Timestamp(6)

  // Relations
  merchants         Merchant[]
  sessions          Session[]
  auditLogs         AuditLog[]

  // Indexes
  @@index([email])
  @@index([phone])
  @@index([isActive])
  @@index([createdAt])
  @@map("users")
}

// Merchant/business entities
model Merchant {
  id                String   @id @default(uuid7()) @db.Uuid
  userId            String   @db.Uuid
  businessName      String   @db.VarChar(255)
  businessType      String   @db.VarChar(100)
  registrationNumber String? @unique @db.VarChar(100)
  taxId             String?  @unique @db.VarChar(50)
  address           Json?    // Structured address data
  contactInfo       Json?    // Additional contact information
  isVerified        Boolean  @default(false)
  verificationStatus String  @default("pending") @db.VarChar(50)
  createdAt         DateTime @default(now()) @db.Timestamp(6)
  updatedAt         DateTime @updatedAt @db.Timestamp(6)

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions      Transaction[]
  auditLogs         AuditLog[]

  // Indexes
  @@index([userId])
  @@index([isVerified])
  @@index([verificationStatus])
  @@index([businessName])
  @@map("merchants")
}

// Mobile money transactions
model Transaction {
  id                String   @id @default(uuid7()) @db.Uuid
  merchantId        String   @db.Uuid
  transactionId     String   @unique @db.VarChar(100) // External transaction ID
  transactionType   String   @db.VarChar(50) // deposit, withdrawal, transfer, payment
  amount            Decimal  @db.Decimal(15, 2)
  currency          String   @default("GHS") @db.VarChar(3)
  status            String   @default("pending") @db.VarChar(50)
  description       String?  @db.Text
  metadata          Json?    // Additional transaction data
  processedAt       DateTime?
  createdAt         DateTime @default(now()) @db.Timestamp(6)
  updatedAt         DateTime @updatedAt @db.Timestamp(6)

  // Relations
  merchant          Merchant @relation(fields: [merchantId], references: [id], onDelete: Cascade)
  auditLogs         AuditLog[]

  // Indexes
  @@index([merchantId])
  @@index([transactionId])
  @@index([transactionType])
  @@index([status])
  @@index([createdAt])
  @@index([processedAt])
  @@map("transactions")
}

// User sessions for authentication
model Session {
  id                String   @id @default(uuid7()) @db.Uuid
  userId            String   @db.Uuid
  token             String   @unique @db.Text
  deviceInfo        Json?    // Device and browser information
  ipAddress         String?  @db.VarChar(45)
  expiresAt         DateTime @db.Timestamp(6)
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now()) @db.Timestamp(6)

  // Relations
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  // Indexes
  @@index([userId])
  @@index([token])
  @@index([expiresAt])
  @@index([isActive])
  @@map("sessions")
}

// ============================================================================
// AUDIT & COMPLIANCE
// ============================================================================

// Comprehensive audit logging for compliance
model AuditLog {
  id                String   @id @default(uuid7()) @db.Uuid
  userId            String?  @db.Uuid
  merchantId        String?  @db.Uuid
  transactionId     String?  @db.Uuid
  action            String   @db.VarChar(100) // create, update, delete, login, etc.
  entityType        String   @db.VarChar(50)  // User, Merchant, Transaction, etc.
  entityId          String   @db.Uuid
  oldValues         Json?    // Previous values for updates
  newValues         Json?    // New values for updates
  metadata          Json?    // Additional context
  ipAddress         String?  @db.VarChar(45)
  userAgent         String?  @db.Text
  createdAt         DateTime @default(now()) @db.Timestamp(6)

  // Relations
  user              User?      @relation(fields: [userId], references: [id])
  merchant          Merchant?  @relation(fields: [merchantId], references: [id])
  transaction       Transaction? @relation(fields: [transactionId], references: [id])

  // Indexes
  @@index([userId])
  @@index([merchantId])
  @@index([transactionId])
  @@index([action])
  @@index([entityType])
  @@index([createdAt])
  @@map("audit_logs")
}

// ============================================================================
// SYSTEM TABLES
// ============================================================================

// API rate limiting
model RateLimit {
  id                String   @id @default(uuid7()) @db.Uuid
  identifier        String   @db.VarChar(255) // IP, user ID, or API key
  endpoint          String   @db.VarChar(500)
  hits              Int      @default(0)
  windowStart       DateTime @db.Timestamp(6)
  windowEnd         DateTime @db.Timestamp(6)
  createdAt         DateTime @default(now()) @db.Timestamp(6)

  // Indexes
  @@index([identifier])
  @@index([endpoint])
  @@index([windowStart])
  @@index([windowEnd])
  @@map("rate_limits")
}

// System configuration
model SystemConfig {
  id                String   @id @default(uuid7()) @db.Uuid
  key               String   @unique @db.VarChar(255)
  value             Json
  description       String?  @db.Text
  isPublic          Boolean  @default(false)
  updatedAt         DateTime @updatedAt @db.Timestamp(6)
  createdAt         DateTime @default(now()) @db.Timestamp(6)

  // Indexes
  @@index([key])
  @@index([isPublic])
  @@map("system_config")
}

// ============================================================================
// VIEWS AND FUNCTIONS
// ============================================================================

// Monthly transaction summary view
view MonthlyTransactionSummary {
  merchantId        String   @db.Uuid
  year              Int
  month             Int
  totalTransactions Int
  totalAmount       Decimal  @db.Decimal(15, 2)
  deposits          Int
  withdrawals       Int
  transfers         Int

  @@map("_monthly_transaction_summary")
}

// Daily active users view
view DailyActiveUsers {
  date              DateTime @db.Date
  activeUsers       Int
  newUsers          Int
  returningUsers    Int

  @@map("_daily_active_users")
}